# Generated by Django 3.2.9 on 2021-11-11 18:32

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('idauthor', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('photo_filename', models.CharField(blank=True, max_length=100, null=True)),
                ('path', models.CharField(blank=True, max_length=1000, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('trail_name', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'author',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Countries',
            fields=[
                ('id_country', models.AutoField(primary_key=True, serialize=False)),
                ('country_name', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'countries',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Idioma',
            fields=[
                ('id_idioma', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('designation', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'idioma',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Languages',
            fields=[
                ('idlanguages', models.AutoField(primary_key=True, serialize=False)),
                ('language', models.CharField(blank=True, max_length=45, null=True)),
                ('language_code', models.CharField(blank=True, max_length=2, null=True)),
            ],
            options={
                'db_table': 'languages',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Logs',
            fields=[
                ('idlogs', models.AutoField(primary_key=True, serialize=False)),
                ('time_stamp', models.CharField(blank=True, max_length=45, null=True)),
                ('id_poi', models.CharField(blank=True, max_length=45, null=True)),
                ('device_id', models.CharField(blank=True, max_length=45, null=True)),
                ('language', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'logs',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Plants',
            fields=[
                ('idplants', models.AutoField(primary_key=True, serialize=False)),
                ('species', models.CharField(blank=True, max_length=10000, null=True)),
                ('family', models.CharField(blank=True, max_length=10000, null=True)),
                ('georeference', models.CharField(blank=True, max_length=100, null=True)),
                ('synonomy', models.CharField(blank=True, max_length=10000, null=True)),
                ('height', models.CharField(blank=True, max_length=10000, null=True)),
                ('map_image_filename', models.CharField(blank=True, max_length=10000, null=True)),
                ('path', models.CharField(blank=True, max_length=10000, null=True)),
                ('observations', models.CharField(blank=True, max_length=10000, null=True)),
            ],
            options={
                'db_table': 'plants',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PointsInterest',
            fields=[
                ('id_point_interest', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'points_interest',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Trails',
            fields=[
                ('idtrails', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=10000, null=True)),
                ('title', models.CharField(blank=True, max_length=1000, null=True)),
                ('subtitle', models.CharField(blank=True, max_length=1000, null=True)),
                ('trail_name', models.CharField(blank=True, max_length=20, null=True)),
                ('latitude', models.CharField(blank=True, max_length=50, null=True)),
                ('longitude', models.CharField(blank=True, max_length=50, null=True)),
                ('zoom', models.CharField(blank=True, max_length=64, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('map_marker_description', models.CharField(blank=True, max_length=10000, null=True)),
                ('radius', models.CharField(blank=True, max_length=10, null=True)),
                ('map_marker_color', models.CharField(blank=True, max_length=8, null=True)),
                ('application', models.CharField(blank=True, max_length=20, null=True)),
                ('default_language', models.CharField(blank=True, max_length=2, null=True)),
            ],
            options={
                'db_table': 'trails',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TypeResources',
            fields=[
                ('idtype_resources', models.AutoField(primary_key=True, serialize=False)),
                ('designation', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'type_resources',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('iduser', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('total_points', models.IntegerField(blank=True, null=True)),
                ('language', models.CharField(blank=True, max_length=50, null=True)),
                ('password', models.CharField(blank=True, max_length=100, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
                ('application_name', models.CharField(blank=True, max_length=20, null=True)),
                ('profile', models.IntegerField(blank=True, null=True)),
                ('recover_key', models.CharField(blank=True, max_length=50, null=True)),
                ('time_stamp_recover', models.DateField(blank=True, null=True)),
                ('number_resources_cache', models.IntegerField(blank=True, null=True)),
                ('max_file_size_upload', models.IntegerField(blank=True, null=True)),
                ('device_name_before', models.CharField(blank=True, max_length=1000, null=True)),
                ('countries_id_country', models.ForeignKey(blank=True, db_column='countries_id_country', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.countries')),
            ],
            options={
                'db_table': 'users',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='AppTranslations',
            fields=[
                ('idioma_id_idioma', models.OneToOneField(db_column='idioma_id_idioma', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.idioma')),
                ('plant_species', models.CharField(blank=True, max_length=100, null=True)),
                ('plant_name', models.CharField(blank=True, max_length=100, null=True)),
                ('plant_family', models.CharField(blank=True, max_length=100, null=True)),
                ('plant_height', models.CharField(blank=True, max_length=100, null=True)),
                ('plant_habitat', models.CharField(blank=True, max_length=100, null=True)),
                ('plant_distribution', models.CharField(blank=True, max_length=100, null=True)),
                ('plant_common_name', models.CharField(blank=True, max_length=100, null=True)),
                ('plant_synonomy', models.CharField(blank=True, max_length=100, null=True)),
                ('plant_curiosity', models.CharField(blank=True, max_length=100, null=True)),
                ('plant', models.CharField(blank=True, max_length=100, null=True)),
                ('leaf', models.CharField(blank=True, max_length=100, null=True)),
                ('flower', models.CharField(blank=True, max_length=100, null=True)),
                ('fruit', models.CharField(blank=True, max_length=100, null=True)),
                ('gastronomy_uses', models.CharField(blank=True, max_length=100, null=True)),
                ('medicinal_uses', models.CharField(blank=True, max_length=100, null=True)),
                ('others_uses', models.CharField(blank=True, max_length=100, null=True)),
                ('map', models.CharField(blank=True, max_length=100, null=True)),
                ('technical_information', models.CharField(blank=True, max_length=50, null=True)),
                ('author_name', models.CharField(blank=True, max_length=100, null=True)),
                ('more_information_about_author', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('tipo_obra', models.CharField(blank=True, max_length=50, null=True)),
                ('artifact_name', models.CharField(blank=True, max_length=50, null=True)),
                ('biography', models.CharField(blank=True, max_length=100, null=True)),
                ('obra', models.CharField(blank=True, max_length=50, null=True)),
                ('plant_flowering_season', models.CharField(blank=True, max_length=100, null=True)),
                ('plant_used_part', models.CharField(blank=True, max_length=100, null=True)),
                ('plant_perenidade', models.CharField(blank=True, max_length=100, null=True)),
                ('start_trail', models.CharField(blank=True, max_length=50, null=True)),
                ('start_quiz', models.CharField(blank=True, max_length=50, null=True)),
                ('show', models.CharField(blank=True, max_length=50, null=True)),
                ('txt_title_quiz', models.CharField(blank=True, max_length=100, null=True)),
                ('txt_subtitle_quiz', models.CharField(blank=True, max_length=100, null=True)),
                ('txt_points', models.CharField(blank=True, max_length=50, null=True)),
                ('txt_points_interest_list', models.CharField(blank=True, max_length=1000, null=True)),
                ('txt_check', models.CharField(blank=True, max_length=50, null=True)),
                ('txt_correct', models.CharField(blank=True, max_length=50, null=True)),
                ('txt_continue', models.CharField(blank=True, max_length=50, null=True)),
                ('txt_incorrect', models.CharField(blank=True, max_length=50, null=True)),
                ('txt_no_questions_available', models.CharField(blank=True, max_length=100, null=True)),
                ('txt_no_information', models.CharField(blank=True, max_length=200, null=True)),
                ('questions_list', models.CharField(blank=True, max_length=100, null=True)),
                ('number_questions', models.CharField(blank=True, max_length=50, null=True)),
                ('number_questions_answered', models.CharField(blank=True, max_length=50, null=True)),
                ('total_points', models.CharField(blank=True, max_length=50, null=True)),
                ('total_points_user', models.CharField(blank=True, max_length=50, null=True)),
                ('no_server', models.CharField(blank=True, max_length=100, null=True)),
                ('no_internet', models.CharField(blank=True, max_length=100, null=True)),
                ('submit', models.CharField(blank=True, max_length=20, null=True)),
                ('txt_enter', models.CharField(blank=True, max_length=50, null=True)),
                ('txt_forgot_password', models.CharField(blank=True, max_length=50, null=True)),
                ('txt_register', models.CharField(blank=True, max_length=50, null=True)),
                ('search', models.CharField(blank=True, max_length=20, null=True)),
                ('user_location', models.CharField(blank=True, max_length=50, null=True)),
                ('maximum_file_size', models.CharField(blank=True, max_length=250, null=True)),
                ('txt_user_name', models.CharField(blank=True, max_length=100, null=True)),
                ('txt_placeholdeer_user_name', models.CharField(blank=True, max_length=100, null=True)),
                ('txt_fill_in_field', models.CharField(blank=True, max_length=100, null=True)),
                ('txt_user_profile', models.CharField(blank=True, max_length=100, null=True)),
                ('txt_view', models.CharField(blank=True, max_length=100, null=True)),
                ('txt_view_edit', models.CharField(blank=True, max_length=100, null=True)),
                ('txt_view_edit_create', models.CharField(blank=True, max_length=100, null=True)),
                ('txt_view_edit_create_trails', models.CharField(blank=True, max_length=100, null=True)),
                ('txt_view_edit_create_users', models.CharField(blank=True, max_length=100, null=True)),
                ('txt_email', models.CharField(blank=True, max_length=100, null=True)),
                ('txt_email_placeholder', models.CharField(blank=True, max_length=100, null=True)),
                ('txt_confirm_email', models.CharField(blank=True, max_length=100, null=True)),
                ('txt_password', models.CharField(blank=True, max_length=100, null=True)),
                ('txt_password_placeholder', models.CharField(blank=True, max_length=100, null=True)),
                ('txt_confirm_password', models.CharField(blank=True, max_length=100, null=True)),
                ('txt_register_user', models.CharField(blank=True, max_length=100, null=True)),
                ('txt_return', models.CharField(blank=True, max_length=100, null=True)),
                ('txt_different_emails', models.CharField(blank=True, max_length=100, null=True)),
                ('txt_different_passwords', models.CharField(blank=True, max_length=100, null=True)),
                ('host_unreachable', models.CharField(blank=True, max_length=1000, null=True)),
                ('txt_user_mismatch', models.CharField(blank=True, max_length=1000, null=True)),
                ('txt_french', models.CharField(blank=True, max_length=50, null=True)),
                ('txt_english', models.CharField(blank=True, max_length=30, null=True)),
                ('txt_portuguese', models.CharField(blank=True, max_length=25, null=True)),
                ('txt_spanish', models.CharField(blank=True, max_length=25, null=True)),
                ('txt_language', models.CharField(blank=True, max_length=25, null=True)),
                ('txt_correct_answer', models.CharField(blank=True, max_length=100, null=True)),
                ('txt_pergunta', models.CharField(blank=True, max_length=50, null=True)),
                ('txt_answer', models.CharField(blank=True, max_length=20, null=True)),
                ('txt_qr_code', models.CharField(blank=True, max_length=50, null=True)),
                ('poetry', models.CharField(blank=True, max_length=50, null=True)),
                ('painting', models.CharField(blank=True, max_length=50, null=True)),
                ('sculture', models.CharField(blank=True, max_length=50, null=True)),
                ('photo', models.CharField(blank=True, max_length=50, null=True)),
                ('artcraft', models.CharField(blank=True, max_length=50, null=True)),
                ('others', models.CharField(blank=True, max_length=50, null=True)),
                ('upload_video', models.CharField(blank=True, max_length=50, null=True)),
                ('artifact_description', models.CharField(blank=True, max_length=50, null=True)),
                ('photo_artifact', models.CharField(blank=True, max_length=50, null=True)),
                ('photo_about_author_work', models.CharField(blank=True, max_length=100, null=True)),
                ('observations', models.CharField(blank=True, max_length=50, null=True)),
                ('video_trigger', models.CharField(blank=True, max_length=100, null=True)),
                ('author_name1', models.CharField(blank=True, max_length=50, null=True)),
                ('author_name_placeholder', models.CharField(blank=True, max_length=100, null=True)),
                ('photo_author', models.CharField(blank=True, max_length=50, null=True)),
                ('work_done', models.CharField(blank=True, max_length=50, null=True)),
                ('upload_videos_images_biography', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('subtitle', models.CharField(blank=True, max_length=50, null=True)),
                ('specie_placeholder', models.CharField(blank=True, max_length=100, null=True)),
                ('family_placeholder', models.CharField(blank=True, max_length=100, null=True)),
                ('synomy', models.CharField(blank=True, max_length=50, null=True)),
                ('synonomy_placeholder', models.CharField(blank=True, max_length=100, null=True)),
                ('qr_code_description', models.CharField(blank=True, max_length=50, null=True)),
                ('common_name', models.CharField(blank=True, max_length=50, null=True)),
                ('plant_description', models.CharField(blank=True, max_length=100, null=True)),
                ('leaf_description', models.CharField(blank=True, max_length=50, null=True)),
                ('flower_description', models.CharField(blank=True, max_length=50, null=True)),
                ('fruit_description', models.CharField(blank=True, max_length=50, null=True)),
                ('upload_videos_images_plant', models.CharField(blank=True, max_length=100, null=True)),
                ('upload_videos_images_leaf', models.CharField(blank=True, max_length=100, null=True)),
                ('upload_videos_images_flower', models.CharField(blank=True, max_length=100, null=True)),
                ('upload_videos_images_fruit', models.CharField(blank=True, max_length=100, null=True)),
                ('type_plant', models.CharField(blank=True, max_length=50, null=True)),
                ('trees', models.CharField(blank=True, max_length=50, null=True)),
                ('arbustos', models.CharField(blank=True, max_length=50, null=True)),
                ('herbaceas', models.CharField(blank=True, max_length=50, null=True)),
                ('trepadeiras', models.CharField(blank=True, max_length=100, null=True)),
                ('gastronomy_description', models.CharField(blank=True, max_length=100, null=True)),
                ('upload_videos_images_gastronomy', models.CharField(blank=True, max_length=100, null=True)),
                ('medicine_use', models.CharField(blank=True, max_length=100, null=True)),
                ('upload_videos_images_medicine', models.CharField(blank=True, max_length=100, null=True)),
                ('other_uses', models.CharField(blank=True, max_length=100, null=True)),
                ('upload_videos_images_other_uses', models.CharField(blank=True, max_length=100, null=True)),
                ('delete', models.CharField(blank=True, max_length=50, null=True)),
                ('menu_plants', models.CharField(blank=True, max_length=50, null=True)),
                ('menu_plants_questions', models.CharField(blank=True, max_length=50, null=True)),
                ('menu_authors', models.CharField(blank=True, max_length=50, null=True)),
                ('menu_artifacts', models.CharField(blank=True, max_length=50, null=True)),
                ('menu_artifacts_questions', models.CharField(blank=True, max_length=50, null=True)),
                ('menu_trail_fmvg', models.CharField(blank=True, max_length=50, null=True)),
                ('menu_user', models.CharField(blank=True, max_length=50, null=True)),
                ('menu_change_user', models.CharField(blank=True, max_length=50, null=True)),
                ('menu_quit', models.CharField(blank=True, max_length=50, null=True)),
                ('menu_points_interest', models.CharField(blank=True, max_length=50, null=True)),
                ('menu_points_interest_facts', models.CharField(blank=True, max_length=50, null=True)),
                ('menu_points_interest_facts_questions', models.CharField(blank=True, max_length=50, null=True)),
                ('menu_trails', models.CharField(blank=True, max_length=50, null=True)),
                ('upload_videos_images', models.CharField(blank=True, max_length=100, null=True)),
                ('processing', models.CharField(blank=True, max_length=100, null=True)),
                ('done_submission', models.CharField(blank=True, max_length=50, null=True)),
                ('cancel_submission', models.CharField(blank=True, max_length=50, null=True)),
                ('deleted_succeeded', models.CharField(blank=True, max_length=100, null=True)),
                ('deleted_failed', models.CharField(blank=True, max_length=255, null=True)),
                ('txt_fmvg', models.CharField(blank=True, max_length=255, null=True)),
                ('txt_lost', models.CharField(blank=True, max_length=255, null=True)),
                ('txt_invalid_email', models.CharField(blank=True, max_length=50, null=True)),
                ('txt_email_recover_password', models.CharField(blank=True, max_length=500, null=True)),
                ('txt_recover_password_here', models.CharField(blank=True, max_length=50, null=True)),
                ('txt_account_not_found', models.CharField(blank=True, max_length=300, null=True)),
                ('txt_cancel', models.CharField(blank=True, max_length=50, null=True)),
                ('txt_sendemail', models.CharField(blank=True, max_length=255, null=True)),
                ('txt_recover_pass', models.CharField(blank=True, max_length=200, null=True)),
                ('email_already_used', models.CharField(blank=True, max_length=100, null=True)),
                ('txt_recover_title', models.CharField(blank=True, max_length=1000, null=True)),
                ('txt_password_change_sucess', models.CharField(blank=True, max_length=255, null=True)),
                ('file_config_missing', models.CharField(blank=True, max_length=1000, null=True)),
                ('txt_culture', models.CharField(blank=True, max_length=50, null=True)),
                ('point_of_interest', models.CharField(blank=True, max_length=50, null=True)),
                ('txt_fact', models.CharField(blank=True, max_length=50, null=True)),
                ('txt_search', models.CharField(blank=True, max_length=50, null=True)),
                ('txt_downloading', models.CharField(blank=True, max_length=50, null=True)),
                ('txt_media', models.CharField(blank=True, max_length=50, null=True)),
                ('txt_server_error', models.CharField(blank=True, max_length=50, null=True)),
                ('txt_no_free_space', models.CharField(blank=True, max_length=255, null=True)),
                ('txt_qrcode_invalid_offline', models.CharField(blank=True, max_length=50, null=True)),
                ('txt_ok', models.CharField(blank=True, max_length=10, null=True)),
                ('txt_retry', models.CharField(blank=True, max_length=20, null=True)),
                ('txt_no_trails', models.CharField(blank=True, max_length=1000, null=True)),
                ('txt_discard', models.CharField(blank=True, max_length=100, null=True)),
                ('txt_yes', models.CharField(blank=True, max_length=20, null=True)),
                ('txt_no', models.CharField(blank=True, max_length=20, null=True)),
                ('txt_trail_name', models.CharField(blank=True, max_length=256, null=True)),
                ('txt_continue_question', models.CharField(blank=True, max_length=100, null=True)),
                ('txt_point_interest', models.CharField(blank=True, max_length=255, null=True)),
                ('txt_blocked', models.CharField(blank=True, max_length=1000, null=True)),
                ('txt_msg_displayed', models.CharField(blank=True, max_length=1000, null=True)),
                ('txt_email_in_use', models.CharField(blank=True, max_length=255, null=True)),
                ('txt_edit', models.CharField(blank=True, max_length=255, null=True)),
                ('txt_sign_in', models.CharField(blank=True, max_length=255, null=True)),
                ('txt_create_new_account', models.CharField(blank=True, max_length=255, null=True)),
                ('txt_create', models.CharField(blank=True, max_length=50, null=True)),
                ('txt_recover_password', models.CharField(blank=True, max_length=255, null=True)),
                ('txt_save', models.CharField(blank=True, max_length=50, null=True)),
                ('txt_ranking', models.CharField(blank=True, max_length=250, null=True)),
                ('txt_recover', models.CharField(blank=True, max_length=50, null=True)),
                ('txt_backoffice', models.CharField(blank=True, max_length=50, null=True)),
                ('txt_new_pass', models.CharField(blank=True, max_length=50, null=True)),
                ('txt_pass_min_len', models.CharField(blank=True, max_length=50, null=True)),
                ('txt_register_to_see_ranking', models.CharField(blank=True, max_length=255, null=True)),
                ('txt_recovery_sent', models.CharField(blank=True, max_length=1000, null=True)),
                ('txt_remind_offline', models.CharField(blank=True, max_length=1000, null=True)),
                ('txt_upload_after_answer', models.CharField(blank=True, max_length=300, null=True)),
            ],
            options={
                'db_table': 'app_translations',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Triggers',
            fields=[
                ('idtriggers', models.AutoField(primary_key=True, serialize=False)),
                ('trigerfilename', models.CharField(blank=True, max_length=10000, null=True)),
                ('path', models.CharField(blank=True, max_length=10000, null=True)),
                ('designation', models.CharField(blank=True, max_length=10000, null=True)),
                ('culture_idculture', models.IntegerField(blank=True, null=True)),
                ('obj_ra', models.BooleanField(blank=True, null=True)),
                ('type_resource', models.CharField(blank=True, max_length=25, null=True)),
                ('filename_uploaded_file', models.CharField(blank=True, max_length=10000, null=True)),
                ('trigger_name', models.CharField(blank=True, max_length=100, null=True)),
                ('trail_name', models.CharField(blank=True, max_length=50, null=True)),
                ('georeference', models.CharField(blank=True, max_length=100, null=True)),
                ('latitude', models.CharField(blank=True, max_length=100, null=True)),
                ('longitude', models.CharField(blank=True, max_length=100, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('radius', models.CharField(blank=True, max_length=10, null=True)),
                ('map_marker_color', models.CharField(blank=True, max_length=8, null=True)),
                ('map_marker_description', models.CharField(blank=True, max_length=10000, null=True)),
                ('trigger_code', models.CharField(blank=True, max_length=50, null=True)),
                ('points_interest_id_point_interest', models.IntegerField(blank=True, null=True)),
                ('plants_idplants', models.ForeignKey(blank=True, db_column='plants_idplants', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.plants')),
                ('type_resources_idtype_resources', models.ForeignKey(blank=True, db_column='type_resources_idtype_resources', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.typeresources')),
            ],
            options={
                'db_table': 'triggers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Resources',
            fields=[
                ('id_resource', models.AutoField(primary_key=True, serialize=False)),
                ('type_point_interest', models.CharField(blank=True, max_length=100, null=True)),
                ('type_media', models.CharField(blank=True, max_length=5, null=True)),
                ('type_data', models.CharField(blank=True, max_length=100, null=True)),
                ('resource_use', models.CharField(blank=True, max_length=10000, null=True)),
                ('culture_idculture', models.IntegerField(blank=True, null=True)),
                ('filename', models.CharField(blank=True, max_length=1000, null=True)),
                ('path', models.CharField(blank=True, max_length=1000, null=True)),
                ('language', models.CharField(blank=True, max_length=2, null=True)),
                ('resource_descritpion', models.CharField(blank=True, max_length=10000, null=True)),
                ('cover', models.BooleanField(blank=True, null=True)),
                ('color', models.CharField(blank=True, max_length=8, null=True)),
                ('processed_status', models.CharField(blank=True, max_length=1, null=True)),
                ('multiple_files', models.IntegerField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('error_downloading', models.BooleanField(blank=True, null=True)),
                ('trails_idtrail', models.IntegerField(blank=True, null=True)),
                ('points_interest_id_points_interest', models.IntegerField(blank=True, null=True)),
                ('facts_idfacts', models.IntegerField(blank=True, null=True)),
                ('number_uploads', models.IntegerField(blank=True, null=True)),
                ('time_stamp', models.CharField(blank=True, max_length=100, null=True)),
                ('question_id', models.IntegerField(blank=True, null=True)),
                ('author_idauthor', models.ForeignKey(blank=True, db_column='author_idauthor', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.author')),
                ('plants_idplants', models.ForeignKey(blank=True, db_column='plants_idplants', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.plants')),
            ],
            options={
                'db_table': 'resources',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Questions',
            fields=[
                ('idquestions', models.AutoField(primary_key=True, serialize=False)),
                ('correct_answer', models.IntegerField(blank=True, null=True)),
                ('points', models.IntegerField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('triggers_idtriggers', models.ForeignKey(blank=True, db_column='triggers_idtriggers', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.triggers')),
            ],
            options={
                'db_table': 'questions',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Facts',
            fields=[
                ('idfacts', models.AutoField(primary_key=True, serialize=False)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('triggers_idtriggers', models.ForeignKey(blank=True, db_column='triggers_idtriggers', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.triggers')),
            ],
            options={
                'db_table': 'facts',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserHasQuestions',
            fields=[
                ('user_iduser', models.OneToOneField(db_column='user_iduser', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.users')),
                ('questions_idquestions', models.IntegerField()),
                ('points', models.IntegerField(blank=True, null=True)),
                ('answer', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_has_questions',
                'managed': True,
                'unique_together': {('user_iduser', 'questions_idquestions')},
            },
        ),
        migrations.CreateModel(
            name='TypePlants',
            fields=[
                ('designation', models.CharField(blank=True, max_length=100, null=True)),
                ('type_plant', models.IntegerField(primary_key=True, serialize=False)),
                ('language', models.ForeignKey(db_column='language', on_delete=django.db.models.deletion.DO_NOTHING, to='api.idioma')),
            ],
            options={
                'db_table': 'type_plants',
                'managed': True,
                'unique_together': {('type_plant', 'language')},
            },
        ),
        migrations.CreateModel(
            name='TypeDataHasPlants',
            fields=[
                ('type_data_idtype_data', models.IntegerField(primary_key=True, serialize=False)),
                ('plants_idplants', models.ForeignKey(db_column='plants_idplants', on_delete=django.db.models.deletion.DO_NOTHING, to='api.plants')),
            ],
            options={
                'db_table': 'type_data_has_plants',
                'managed': True,
                'unique_together': {('type_data_idtype_data', 'plants_idplants')},
            },
        ),
        migrations.CreateModel(
            name='TrailsTechnicalInformation',
            fields=[
                ('language', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=1000, null=True)),
                ('subtitle', models.CharField(blank=True, max_length=1000, null=True)),
                ('description', models.CharField(blank=True, max_length=10000, null=True)),
                ('trails_idtrails', models.ForeignKey(db_column='trails_idtrails', on_delete=django.db.models.deletion.DO_NOTHING, to='api.trails')),
            ],
            options={
                'db_table': 'trails_technical_information',
                'managed': True,
                'unique_together': {('language', 'trails_idtrails')},
            },
        ),
        migrations.CreateModel(
            name='TipoObras',
            fields=[
                ('tipo_obra', models.AutoField(primary_key=True, serialize=False)),
                ('designacao_tipo_obra', models.CharField(blank=True, max_length=10000, null=True)),
                ('idioma_id_idioma', models.ForeignKey(db_column='idioma_id_idioma', on_delete=django.db.models.deletion.DO_NOTHING, to='api.idioma')),
            ],
            options={
                'db_table': 'tipo_obras',
                'managed': True,
                'unique_together': {('tipo_obra', 'idioma_id_idioma')},
            },
        ),
        migrations.CreateModel(
            name='QuestionsTechnicalInformation',
            fields=[
                ('language', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('question', models.CharField(blank=True, max_length=10000, null=True)),
                ('answer1', models.CharField(blank=True, max_length=10000, null=True)),
                ('answer2', models.CharField(blank=True, max_length=10000, null=True)),
                ('answer3', models.CharField(blank=True, max_length=10000, null=True)),
                ('after_answer', models.CharField(blank=True, max_length=10000, null=True)),
                ('questions_idquestions', models.ForeignKey(db_column='questions_idquestions', on_delete=django.db.models.deletion.DO_NOTHING, to='api.questions')),
            ],
            options={
                'db_table': 'questions_technical_information',
                'managed': True,
                'unique_together': {('language', 'questions_idquestions')},
            },
        ),
        migrations.CreateModel(
            name='PointsInterestTechnicalInformation',
            fields=[
                ('language', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=10000, null=True)),
                ('subtitle', models.CharField(blank=True, max_length=10000, null=True)),
                ('description', models.CharField(blank=True, max_length=10000, null=True)),
                ('points_interest_id_point_interest', models.ForeignKey(db_column='points_interest_id_point_interest', on_delete=django.db.models.deletion.DO_NOTHING, to='api.pointsinterest')),
            ],
            options={
                'db_table': 'points_interest_technical_information',
                'managed': True,
                'unique_together': {('language', 'points_interest_id_point_interest')},
            },
        ),
        migrations.CreateModel(
            name='PlantsHasTypePlants',
            fields=[
                ('plants_idplants', models.OneToOneField(db_column='plants_idplants', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.plants')),
                ('type_plants_idtype_plants', models.IntegerField()),
                ('type_plants_language', models.CharField(max_length=2)),
            ],
            options={
                'db_table': 'plants_has_type_plants',
                'managed': True,
                'unique_together': {('plants_idplants', 'type_plants_idtype_plants', 'type_plants_language')},
            },
        ),
        migrations.CreateModel(
            name='FactsTechnicalInformation',
            fields=[
                ('language', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=10000, null=True)),
                ('subtitle', models.CharField(blank=True, max_length=10000, null=True)),
                ('description', models.CharField(blank=True, max_length=10000, null=True)),
                ('facts_idfacts', models.ForeignKey(db_column='facts_idfacts', on_delete=django.db.models.deletion.DO_NOTHING, to='api.facts')),
            ],
            options={
                'db_table': 'facts_technical_information',
                'managed': True,
                'unique_together': {('language', 'facts_idfacts')},
            },
        ),
        migrations.CreateModel(
            name='Dictionary',
            fields=[
                ('id_palavra', models.IntegerField(primary_key=True, serialize=False)),
                ('palavra', models.CharField(blank=True, max_length=100, null=True)),
                ('definition', models.CharField(blank=True, max_length=100, null=True)),
                ('language', models.ForeignKey(db_column='language', on_delete=django.db.models.deletion.DO_NOTHING, to='api.idioma')),
            ],
            options={
                'db_table': 'dictionary',
                'managed': True,
                'unique_together': {('id_palavra', 'language')},
            },
        ),
        migrations.CreateModel(
            name='CultureTechnicalInformation',
            fields=[
                ('language', models.OneToOneField(db_column='language', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.idioma')),
                ('culture_idculture', models.IntegerField()),
                ('description', models.CharField(blank=True, max_length=10000, null=True)),
                ('artificat_name', models.CharField(blank=True, max_length=10000, null=True)),
                ('observations', models.CharField(blank=True, max_length=10000, null=True)),
                ('curiosities', models.CharField(blank=True, max_length=10000, null=True)),
            ],
            options={
                'db_table': 'culture_technical_information',
                'managed': True,
                'unique_together': {('language', 'culture_idculture')},
            },
        ),
        migrations.CreateModel(
            name='Culture',
            fields=[
                ('idculture', models.AutoField(primary_key=True, serialize=False)),
                ('path', models.CharField(blank=True, max_length=10000, null=True)),
                ('georeference', models.CharField(blank=True, max_length=10000, null=True)),
                ('map_image_filename', models.CharField(blank=True, max_length=10000, null=True)),
                ('tipo_obras_tipo_obra', models.IntegerField()),
                ('photo_culture', models.CharField(blank=True, max_length=10000, null=True)),
                ('author_idauthor', models.ForeignKey(blank=True, db_column='author_idauthor', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.author')),
            ],
            options={
                'db_table': 'culture',
                'managed': True,
                'unique_together': {('idculture', 'tipo_obras_tipo_obra')},
            },
        ),
        migrations.CreateModel(
            name='UsersHasTriggers',
            fields=[
                ('users_iduser', models.OneToOneField(db_column='users_iduser', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.users')),
                ('complete', models.BooleanField(blank=True, null=True)),
                ('triggers_idtriggers', models.ForeignKey(db_column='triggers_idtriggers', on_delete=django.db.models.deletion.DO_NOTHING, to='api.triggers')),
            ],
            options={
                'db_table': 'users_has_triggers',
                'managed': True,
                'unique_together': {('users_iduser', 'triggers_idtriggers')},
            },
        ),
        migrations.CreateModel(
            name='PlantsTechnicalInformation',
            fields=[
                ('language', models.OneToOneField(db_column='language', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.idioma')),
                ('common_name', models.CharField(blank=True, max_length=10000, null=True)),
                ('habitat', models.CharField(blank=True, max_length=10000, null=True)),
                ('distribution', models.CharField(blank=True, max_length=10000, null=True)),
                ('plant_descritpion', models.CharField(blank=True, max_length=10000, null=True)),
                ('leaf_description', models.CharField(blank=True, max_length=10000, null=True)),
                ('flower_description', models.CharField(blank=True, max_length=10000, null=True)),
                ('fruit_description', models.CharField(blank=True, max_length=10000, null=True)),
                ('flowering_season', models.CharField(blank=True, max_length=10000, null=True)),
                ('used_parts', models.CharField(blank=True, max_length=10000, null=True)),
                ('gastronomy_uses', models.CharField(blank=True, max_length=10000, null=True)),
                ('medicinal_uses', models.CharField(blank=True, max_length=10000, null=True)),
                ('others_uses', models.CharField(blank=True, max_length=10000, null=True)),
                ('name', models.CharField(blank=True, max_length=10000, null=True)),
                ('type_plants_language', models.CharField(blank=True, max_length=2, null=True)),
                ('curiosity', models.CharField(blank=True, max_length=10000, null=True)),
                ('perenidade', models.CharField(blank=True, max_length=10000, null=True)),
                ('plants_idplants', models.ForeignKey(db_column='plants_idplants', on_delete=django.db.models.deletion.DO_NOTHING, to='api.plants')),
                ('type_plants_type_plant', models.ForeignKey(blank=True, db_column='type_plants_type_plant', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.typeplants')),
            ],
            options={
                'db_table': 'plants_technical_information',
                'managed': True,
                'unique_together': {('language', 'plants_idplants')},
            },
        ),
        migrations.CreateModel(
            name='AuthorThecnicalInformation',
            fields=[
                ('language', models.OneToOneField(db_column='language', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.idioma')),
                ('biography', models.CharField(blank=True, max_length=10000, null=True)),
                ('biography_video', models.CharField(blank=True, max_length=100, null=True)),
                ('path', models.CharField(blank=True, max_length=100, null=True)),
                ('obra', models.CharField(blank=True, max_length=10000, null=True)),
                ('observations', models.CharField(blank=True, max_length=10000, null=True)),
                ('curiosities', models.CharField(blank=True, max_length=10000, null=True)),
                ('author_idauthor', models.ForeignKey(db_column='author_idauthor', on_delete=django.db.models.deletion.DO_NOTHING, to='api.author')),
            ],
            options={
                'db_table': 'author_thecnical_information',
                'managed': True,
                'unique_together': {('language', 'author_idauthor')},
            },
        ),
    ]
